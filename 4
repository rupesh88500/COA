def to_bin(x, n):
    return format(x if x >= 0 else (1<<n)+x, f'0{n}b')

def booth(m, r, bits=8):
    M  = to_bin(m, bits)
    S  = to_bin(-m, bits)
    P  = "0"*bits + to_bin(r, bits) + "0"

    for _ in range(bits):
        if P[-2:] == "01":   P = format(int(P,2) + int(M + "0"*bits,2), f'0{2*bits+1}b')
        elif P[-2:] == "10": P = format(int(P,2) + int(S + "0"*bits,2), f'0{2*bits+1}b')
        P = P[0] + P[:-1]    # arithmetic right shift

    P = P[:-1]              # remove extra bit
    result = int(P, 2)
    if result >= (1 << (2*bits-1)):  
        result -= (1 << (2*bits))

    print("\nProduct (Decimal):", result)
    print("Product (Binary) :", P)

# MAIN
m = int(input("M: "))
r = int(input("R: "))
booth(m, r)
