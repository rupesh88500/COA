def to_bin(x, n): 
    return format(x & ((1<<n)-1), f'0{n}b')

def restoring_division(Q, M, bits=8):
    A = 0
    for _ in range(bits):
        A = ((A<<1) | (Q>>(bits-1))) & ((1<<bits)-1)
        Q = (Q<<1) & ((1<<bits)-1)
        A2 = A - M

        if A2 >= 0:
            A = A2
            Q |= 1

    print("Quotient  :", Q, "=", to_bin(Q, bits))
    print("Remainder :", A, "=", to_bin(A, bits))

# Main
d = int(input("Dividend: "))
s = int(input("Divisor : "))
restoring_division(d, s)
