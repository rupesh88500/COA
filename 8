import math

def cache_mapping():
    cache = 16*1024       # 16 KB
    memory = 4*1024*1024  # 4 MB
    line = 8              # bytes per line
    addr = 22             # address bits

    lines = cache // line
    blocks = memory // line

    offset = int(math.log2(line))

    # Direct Mapping
    index_d = int(math.log2(lines))
    tag_d = addr - index_d - offset

    # Fully Associative
    index_a = 0
    tag_a = addr - offset

    # 2-Way Set Associative
    sets = lines // 2
    index_s = int(math.log2(sets))
    tag_s = addr - index_s - offset

    print("\nMapping Type                Tag   Index   Offset")
    print("-----------------------------------------------")
    print(f"Direct Mapping              {tag_d:<5} {index_d:<6} {offset}")
    print(f"Associative Mapping         {tag_a:<5} {index_a:<6} {offset}")
    print(f"2-Way Set Associative       {tag_s:<5} {index_s:<6} {offset}")

if __name__ == "__main__":
    cache_mapping()

